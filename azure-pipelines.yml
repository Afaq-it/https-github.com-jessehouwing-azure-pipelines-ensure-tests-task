name: 0.1$(Rev:.r)

trigger:
- main

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  vsix: '$(Build.ArtifactStagingDirectory)/vsix/azure-pipelines-ensure-tests-task-$(Build.BuildNumber).vsix'
  zip: '$(Build.ArtifactStagingDirectory)/zip/azure-pipelines-ensure-tests-task-$(Build.BuildNumber).zip'

steps:
- task: TfxInstaller@5
  inputs:
    version: 'v0.x'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(zip)'
    replaceExistingArchive: true

- task: PackageAzureDevOpsExtension@5
  inputs:
    rootFolder: '$(Build.SourcesDirectory)'
    outputPath: '$(vsix)'
    extensionVersion: '$(Build.BuildNumber)'
    updateTasksVersion: false

- task: PublishAzureDevOpsExtension@5
  inputs:
    connectTo: 'AzureRM'
    connectedServiceNameAzureRM: azure-devops-marketplace
    fileType: 'vsix'
    vsixFile: '$(vsix)'
    updateTasksVersion: true
    noWaitValidation: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'Output'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'GitHub - jessehouwing'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    title: '$(Build.BuildNumber)'
    releaseNotesSource: 'inline'
    assets: '$(Build.ArtifactStagingDirectory)/zip/*'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
